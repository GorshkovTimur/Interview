Освежил знания по синглтону.
Из слабых сторон этого шаблона увидел, что:
1. Нарушает первую букву SOLID, а именно
Принцип единственной ответственности. Синглтону приходится отвечать за 2 назначения:
- содержания себя в единственном экземпляре
- непосредственно свой функционал
2. Потоконебезопасный паттерн при простой реализации.
Классическая реализация public static Singleton getInstance() {
                            if (instance == null) {
                                instance = new Singleton();
                            }

                            return instance;
                        }
поведет себя непредсказуемо при работе с несколькими потоками
3. Усложняет Unit тестирование приложение.
Т.к. является глобальным объектом и содержит в себе свое состояние, то нужно тестировать зависимый класс,
синглтон, отслеживать состояние и прочие весёлые приключения